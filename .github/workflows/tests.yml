name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r tests/requirements.txt
    
    - name: Set up test database
      run: |
        sudo systemctl start postgresql
        sudo -u postgres psql -c "CREATE DATABASE test_harithmapos;"
        sudo -u postgres psql -c "CREATE USER test_user WITH PASSWORD 'test_password';"
        sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE test_harithmapos TO test_user;"
    
    - name: Run unit tests
      run: |
        cd tests
        python run_tests.py --unit --coverage --verbose
    
    - name: Run integration tests
      run: |
        cd tests
        python run_tests.py --integration --coverage --verbose
    
    - name: Run all tests
      run: |
        cd tests
        python run_tests.py --coverage --verbose
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"
    
    - name: Install linting dependencies
      run: |
        pip install flake8 black isort mypy
    
    - name: Run flake8
      run: |
        flake8 harithmapos/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Run black
      run: |
        black --check harithmapos/ tests/
    
    - name: Run isort
      run: |
        isort --check-only harithmapos/ tests/
    
    - name: Run mypy
      run: |
        mypy harithmapos/ --ignore-missing-imports

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"
    
    - name: Install security dependencies
      run: |
        pip install bandit safety
    
    - name: Run bandit
      run: |
        bandit -r harithmapos/ -f json -o bandit-report.json
    
    - name: Run safety
      run: |
        safety check --json --output safety-report.json
    
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

